doctype html

title Spark

meta(charset='utf-8')
meta(name='viewport', content='width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no')
link(rel='stylesheet', href='style.css')
meta(name='theme-color', content='#008cba')

if process.env.BUILD_TARGET == 'web'
  meta(name='access-key', content=settings ? settings.accessKey : '{{accessKey}}')
  meta(name='mobile-web-app-capable', content='yes')
  meta(name='apple-mobile-web-app-capable', content='yes')
  meta(name='apple-mobile-web-app-status-bar-style', content='black-translucent')

  - manifestDir = 'manifest-' + (settings ? settings.manifestKey : '{{manifestKey}}') + '/'
  link(rel='manifest', href=manifestDir+'manifest.json')
  each size in [ 16, 32, 512 ]
    link(rel='icon', type='image/png', sizes=size+'x'+size, href=manifestDir+'icon-'+size+'.png')
  each size in [ 167, 180, 512 ]
    link(rel='apple-touch-icon', sizes=size+'x'+size, href=manifestDir+'icon-'+size+'.png')

if process.env.BUILD_TARGET != 'web'
  //- in web environment, this is set using an HTTP header instead of a meta tag
  //- unsafe-eval is only required for instascan, which is not used in cordova builds
  - unsafeEval = process.env.BUILD_TARGET !== 'cordova' ? "script-src 'self' 'unsafe-eval'; " : ''
  meta(http-equiv='Content-Security-Policy', content=unsafeEval+"default-src 'self' gap:; font-src 'self' data:; img-src 'self' data:; connect-src *")

body(class='build-'+process.env.BUILD_TARGET)

  #app: .loading
    nav.navbar.navbar-dark.bg-primary.mb-3: .container: span.navbar-brand Spark
    #loader

  script(src='load-theme.js')

  script(src=bundle || 'app.js', defer)

  if process.env.BUILD_TARGET == 'web' || process.env.BUILD_TARGET == 'electron'
    script(src='lib/instascan.js', async)

  if process.env.BUILD_TARGET == 'cordova'
    script(src='cordova.js', defer)
